[33mcommit 97be78e2f4d46d96fcfc87fa9d272be4995ea1d7[m
Author: jposchl <jposchl@ucsc.edu>
Date:   Sat Aug 9 21:46:16 2025 -0700

    post-rever to old changes, todo: 1. fix error at beginning 2. automatic transition once 100% stability 3. ensure measurements are 100% accuarte 4. ensure recommendations are 100% accurate

[1mdiff --git a/src/components/Measurements.tsx b/src/components/Measurements.tsx[m
[1mindex c69247c..09b80b0 100644[m
[1m--- a/src/components/Measurements.tsx[m
[1m+++ b/src/components/Measurements.tsx[m
[36m@@ -3,7 +3,7 @@[m [mimport { Measurements, MeasurementValidation } from '../types'[m
 import { usePoseDetectionTF, POSENET_KEYPOINTS } from '../hooks/usePoseDetectionTF'[m
 import { usePoseValidation } from '../hooks/usePoseValidation'[m
 import { Logger } from '../utils/Logger'[m
[31m-import { DebugOverlay } from './DebugOverlay'[m
[32m+[m
 import { ConfidenceThreshold } from './ConfidenceThreshold'[m
 import { getClothingInstructions } from '../data/poseRequirements'[m
 import React from 'react'[m
[36m@@ -173,6 +173,7 @@[m [mfunction GlobalErrorHooks() {[m
 [m
 interface MeasurementsStepProps {[m
   onMeasurementsComplete: (measurements: Measurements) => void[m
[32m+[m[32m  onAutoProgress: () => void[m
   selectedItemName?: string[m
   selectedCompanyName?: string[m
   selectedStyleName?: string[m
[36m@@ -182,6 +183,7 @@[m [minterface MeasurementsStepProps {[m
 [m
 export function MeasurementsStepImpl({[m
   onMeasurementsComplete,[m
[32m+[m[32m  onAutoProgress,[m
   selectedItemName,[m
   selectedCompanyName,[m
   selectedStyleName,[m
[36m@@ -196,9 +198,10 @@[m [mexport function MeasurementsStepImpl({[m
   const [isProcessing, setIsProcessing] = useState(false)[m
   const [cameraError, setCameraError] = useState<string>('')[m
   const [isDemoMode, setIsDemoMode] = useState(false)[m
[31m-  const [showDebugOverlay, setShowDebugOverlay] = useState(false)[m
[32m+[m
   const [canTakeMeasurement, setCanTakeMeasurement] = useState(false)[m
 [m
[32m+[m
   const {[m
     poseResults,[m
     isInitialized: isPoseInitialized,[m
[36m@@ -208,8 +211,11 @@[m [mexport function MeasurementsStepImpl({[m
     startDetection,[m
     stopDetection,[m
     cleanup,[m
[31m-    getHealthStatus[m
[31m-  } = usePoseDetectionTF()[m
[32m+[m[32m    getHealthStatus,[m
[32m+[m[32m    poseStability,[m
[32m+[m[32m    setSelectedStyle,[m
[32m+[m[32m    resetPoseStability[m
[32m+[m[32m  } = usePoseDetectionTF(10)[m
 [m
   // Pose validation hook for confidence thresholds[m
   const {[m
[36m@@ -224,9 +230,47 @@[m [mexport function MeasurementsStepImpl({[m
       if (validation.isValid) {[m
         setCanTakeMeasurement(true)[m
       }[m
[31m-    }[m
[32m+[m[32m    },[m
[32m+[m[32m    poseStability[m
   })[m
 [m
[32m+[m[32m  // Set selected style for pose stability tracking[m
[32m+[m[32m  useEffect(() => {[m
[32m+[m[32m    if (selectedStyleId) {[m
[32m+[m[32m      setSelectedStyle(selectedStyleId)[m
[32m+[m[32m    }[m
[32m+[m[32m  }, [selectedStyleId, setSelectedStyle])[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m  // Reset validation when pose becomes unstable[m
[32m+[m[32m  useEffect(() => {[m
[32m+[m[32m    if (poseStability && !poseStability.isStable) {[m
[32m+[m[32m      Logger.info('Pose became unstable, resetting validation')[m
[32m+[m[32m      resetValidation()[m
[32m+[m[32m      setCanTakeMeasurement(false)[m
[32m+[m[32m    }[m
[32m+[m[32m  }, [poseStability, resetValidation])[m
[32m+[m
[32m+[m[32m  // Auto-progress when stability reaches 100%[m
[32m+[m[32m  useEffect(() => {[m
[32m+[m[32m    if (poseStability && poseStability.stabilityScore >= 1.0 && !isProcessing) {[m
[32m+[m[32m      Logger.info('Stability reached 100%, auto-progressing to next step in 1.5 seconds', {[m
[32m+[m[32m        stabilityScore: poseStability.stabilityScore,[m
[32m+[m[32m        measurements: !!measurements,[m
[32m+[m[32m        isProcessing,[m
[32m+[m[32m        poseStability[m
[32m+[m[32m      })[m
[32m+[m[32m      // Add a small delay to show the success message[m
[32m+[m[32m      const timer = setTimeout(() => {[m
[32m+[m[32m        Logger.info('Executing auto-progression to next step')[m
[32m+[m[32m        onAutoProgress()[m
[32m+[m[32m      }, 1500)[m
[32m+[m[41m      [m
[32m+[m[32m      return () => clearTimeout(timer)[m
[32m+[m[32m    }[m
[32m+[m[32m  }, [poseStability, isProcessing, onAutoProgress])[m
[32m+[m
   // Log component initialization[m
   useEffect(() => {[m
     Logger.info('MeasurementsStep component initialized', {[m
[36m@@ -332,19 +376,68 @@[m [mexport function MeasurementsStepImpl({[m
         const x = canvas.width - ((landmark.x * scale) + offsetX)[m
         const y = (landmark.y * scale) + offsetY[m
 [m
[31m-        // Draw keypoint[m
[32m+[m[32m        // Check if this landmark is relevant for the current clothing type[m
[32m+[m[32m        const isRelevant = poseStability?.relevantLandmarks.includes(index) ?? false[m
[32m+[m[41m        [m
[32m+[m[32m        // Draw keypoint with different colors for relevant vs non-relevant[m
[32m+[m[32m        ctx.fillStyle = isRelevant ? '#00ff00' : '#666666'[m
         ctx.beginPath()[m
[31m-        ctx.arc(x, y, 4, 0, 2 * Math.PI)[m
[32m+[m[32m        ctx.arc(x, y, isRelevant ? 8 : 4, 0, 2 * Math.PI)[m
         ctx.fill()[m
[31m-[m
[31m-        // Draw keypoint index and confidence[m
[31m-        ctx.fillStyle = '#ffffff'[m
[31m-        ctx.font = '10px Arial'[m
[31m-        ctx.fillText(`${index}:${(landmark.confidence * 100).toFixed(0)}%`, x + 8, y - 8)[m
[32m+[m[41m        [m
[32m+[m[32m        // Reset fill style for lines[m
         ctx.fillStyle = '#00ff00'[m
       }[m
     })[m
 [m
[32m+[m[32m    // Draw connecting lines between relevant landmarks (skeleton)[m
[32m+[m[32m    const skeletonConnections = [[m
[32m+[m[32m      // Head and shoulders[m
[32m+[m[32m      [0, 5], [0, 6], // nose to shoulders[m
[32m+[m[32m      [1, 3], [2, 4], // eyes to ears[m
[32m+[m[32m      [3, 5], [4, 6], // ears to shoulders[m
[32m+[m[41m      [m
[32m+[m[32m      // Upper body[m
[32m+[m[32m      [5, 6], // shoulders[m
[32m+[m[32m      [5, 7], [6, 8], // shoulders to elbows[m
[32m+[m[32m      [7, 9], [8, 10], // elbows to wrists[m
[32m+[m[41m      [m
[32m+[m[32m      // Torso[m
[32m+[m[32m      [5, 11], [6, 12], // shoulders to hips[m
[32m+[m[32m      [11, 12], // hips[m
[32m+[m[41m      [m
[32m+[m[32m      // Lower body[m
[32m+[m[32m      [11, 13], [12, 14], // hips to knees[m
[32m+[m[32m      [13, 15], [14, 16], // knees to ankles[m
[32m+[m[32m      [13, 14] // knees[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    skeletonConnections.forEach(([index1, index2]) => {[m
[32m+[m[32m      const landmark1 = poseResults.landmarks[index1][m
[32m+[m[32m      const landmark2 = poseResults.landmarks[index2][m
[32m+[m[41m      [m
[32m+[m[32m      if (landmark1 && landmark2 &&[m[41m [m
[32m+[m[32m          landmark1.confidence > 0.3 && landmark2.confidence > 0.3) {[m
[32m+[m[41m        [m
[32m+[m[32m        const x1 = canvas.width - ((landmark1.x * scale) + offsetX)[m
[32m+[m[32m        const y1 = (landmark1.y * scale) + offsetY[m
[32m+[m[32m        const x2 = canvas.width - ((landmark2.x * scale) + offsetX)[m
[32m+[m[32m        const y2 = (landmark2.y * scale) + offsetY[m
[32m+[m
[32m+[m[32m        // Check if this connection is relevant for the current clothing type[m
[32m+[m[32m        const isRelevant = poseStability?.relevantLandmarks.includes(index1) &&[m[41m [m
[32m+[m[32m                          poseStability?.relevantLandmarks.includes(index2)[m
[32m+[m[41m        [m
[32m+[m[32m        // Draw skeleton line with different styles for relevant vs non-relevant[m
[32m+[m[32m        ctx.strokeStyle = isRelevant ? '#00ff00' : '#666666'[m
[32m+[m[32m        ctx.lineWidth = isRelevant ? 3 : 1[m
[32m+[m[32m        ctx.beginPath()[m
[32m+[m[32m        ctx.moveTo(x1, y1)[m
[32m+[m[32m        ctx.lineTo(x2, y2)[m
[32m+[m[32m        ctx.stroke()[m
[32m+[m[32m      }[m
[32m+[m[32m    })[m
[32m+[m
     Logger.debug('Drew pose landmarks', {[m
       keypoints: poseResults.landmarks.length,[m
       scale,[m
[36m@@ -726,6 +819,17 @@[m [mexport function MeasurementsStepImpl({[m
     }[m
   }, [poseResults])[m
 [m
[32m+[m[32m  // Log pose stability changes for debugging[m
[32m+[m[32m  useEffect(() => {[m
[32m+[m[32m    if (poseStability) {[m
[32m+[m[32m      Logger.debug('Pose stability updated', {[m
[32m+[m[32m        stabilityScore: poseStability.stabilityScore,[m
[32m+[m[32m        isStable: poseStability.isStable,[m
[32m+[m[32m        relevantLandmarks: poseStability.relevantLandmarks.length[m
[32m+[m[32m      })[m
[32m+[m[32m    }[m
[32m+[m[32m  }, [poseStability])[m
[32m+[m
   // Log errors[m
   useEffect(() => {[m
     if (poseError) {[m
[36m@@ -761,6 +865,7 @@[m [mexport function MeasurementsStepImpl({[m
           validation={validation}[m
           requirements={[]}[m
           isVisible={Boolean(!isDemoMode && !measurements && !isProcessing && selectedStyleId && poseResults?.isDetected)}[m
[32m+[m[32m          poseStability={poseStability}[m
         />[m
 [m
         {isDemoMode ? ([m
[36m@@ -843,6 +948,53 @@[m [mexport function MeasurementsStepImpl({[m
           </div>[m
         )}[m
 [m
[32m+[m[32m        {/* Pose Stability Status */}[m
[32m+[m[32m        {!isDemoMode && !measurements && !isProcessing && poseStability && ([m
[32m+[m[32m          <div className="absolute bottom-32 left-4 z-20">[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m            <div className={`px-3 py-2 rounded-lg text-sm font-medium ${[m
[32m+[m[32m              poseStability.isStable[m[41m [m
[32m+[m[32m                ? 'bg-green-600/80 text-white'[m[41m [m
[32m+[m[32m                : 'bg-red-600/80 text-white'[m
[32m+[m[32m            }`}>[m
[32m+[m[32m              {poseStability.isStable ? '✅ Pose Stable' : '⚠️ Pose Unstable'}[m
[32m+[m[32m            </div>[m
[32m+[m[41m            [m
[32m+[m[32m            {/* Stability Progress Bar */}[m
[32m+[m[32m            <div className="mt-2 px-3 py-2 rounded-lg text-sm font-medium bg-black/60 text-white">[m
[32m+[m[32m              <div className="flex items-center space-x-2 mb-1">[m
[32m+[m[32m                <span>Stability:</span>[m
[32m+[m[32m                <span className="font-bold">{Math.round(poseStability.stabilityScore * 100)}%</span>[m
[32m+[m[32m              </div>[m
[32m+[m[32m              <div className="w-full bg-white/20 rounded-full h-2">[m
[32m+[m[32m                <div[m[41m [m
[32m+[m[32m                  className={`h-2 rounded-full transition-all duration-300 ${[m
[32m+[m[32m                    poseStability.stabilityScore >= 1.0 ? 'bg-green-400' : 'bg-blue-400'[m
[32m+[m[32m                  }`}[m
[32m+[m[32m                  style={{ width: `${poseStability.stabilityScore * 100}%` }}[m
[32m+[m[32m                />[m
[32m+[m[32m              </div>[m
[32m+[m[32m            </div>[m
[32m+[m[41m            [m
[32m+[m[32m            {/* Auto-progression indicator */}[m
[32m+[m[32m            {poseStability.stabilityScore >= 0.9 && poseStability.stabilityScore < 1.0 && ([m
[32m+[m[32m              <div className="mt-2 px-3 py-2 rounded-lg text-sm font-medium bg-blue-600/80 text-white">[m
[32m+[m[32m                🚀 Almost ready! Hold still a bit longer...[m
[32m+[m[32m              </div>[m
[32m+[m[32m            )}[m
[32m+[m[32m            {poseStability.stabilityScore >= 1.0 && ([m
[32m+[m[32m              <div className="mt-2 px-3 py-2 rounded-lg text-sm font-medium bg-green-600/80 text-white">[m
[32m+[m[32m                🎉 Perfect! Moving to next step...[m
[32m+[m[32m              </div>[m
[32m+[m[32m            )}[m
[32m+[m[32m          </div>[m
[32m+[m[32m        )}[m
[32m+[m
         {/* Bottom controls */}[m
         {!measurements && !isProcessing && ([m
           <div className="absolute bottom-4 left-0 right-0 z-20 px-4">[m
[36m@@ -858,7 +1010,8 @@[m [mexport function MeasurementsStepImpl({[m
                 disabled={!isDemoMode && (!poseResults?.isDetected || !canTakeMeasurement)}[m
                 className="flex-1 bg-blue-600 text-white px-4 py-3 rounded-lg font-medium hover:bg-blue-700 disabled:opacity-50"[m
               >[m
[31m-                {isDemoMode ? 'Take Measurement' : 'Waiting for Stable Pose...'}[m
[32m+[m[32m                {isDemoMode ? 'Take Measurement' :[m[41m [m
[32m+[m[32m                  poseStability?.isStable ? 'Take Measurement' : 'Hold Still for Measurements...'}[m
               </button>[m
             </div>[m
           </div>[m
[36m@@ -921,23 +1074,7 @@[m [mexport function MeasurementsStepImpl({[m
 [m
 [m
 [m
[31m-      {/* Debug Overlay */}[m
[31m-      <DebugOverlay[m
[31m-        isVisible={showDebugOverlay}[m
[31m-        onClose={() => setShowDebugOverlay(false)}[m
[31m-        poseDetectionStatus={{[m
[31m-          isInitialized: isPoseInitialized,[m
[31m-          isLoading: isPoseLoading,[m
[31m-          error: poseError,[m
[31m-          poseResults: poseResults[m
[31m-        }}[m
[31m-        cameraStatus={{[m
[31m-          isActive: !isDemoMode && !cameraError,[m
[31m-          error: cameraError,[m
[31m-          stream: videoRef.current?.srcObject as MediaStream[m
[31m-        }}[m
[31m-        videoElement={videoRef.current}[m
[31m-      />[m
[32m+[m
     </div>[m
   )[m
 }[m
